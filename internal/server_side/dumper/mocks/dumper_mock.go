// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/server_side/dumper/dumper.go

// Package dumper_mock is a generated GoMock package.
package dumper_mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	entity "scloud/internal/server_side/entity"
)

// MockDumper is a mock of Dumper interface
type MockDumper struct {
	ctrl     *gomock.Controller
	recorder *MockDumperMockRecorder
}

// MockDumperMockRecorder is the mock recorder for MockDumper
type MockDumperMockRecorder struct {
	mock *MockDumper
}

// NewMockDumper creates a new mock instance
func NewMockDumper(ctrl *gomock.Controller) *MockDumper {
	mock := &MockDumper{ctrl: ctrl}
	mock.recorder = &MockDumperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDumper) EXPECT() *MockDumperMockRecorder {
	return m.recorder
}

// WriteOnDisk mocks base method
func (m *MockDumper) WriteOnDisk(messages []*entity.Message) []int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteOnDisk", messages)
	ret0, _ := ret[0].([]int)
	return ret0
}

// WriteOnDisk indicates an expected call of WriteOnDisk
func (mr *MockDumperMockRecorder) WriteOnDisk(messages interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteOnDisk", reflect.TypeOf((*MockDumper)(nil).WriteOnDisk), messages)
}
